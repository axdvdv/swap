import test from 'ava'
import crypto from 'swap-crypto'
import bitcoin from 'instances/bitcoin'
import ethereum from 'instances/ethereum'
import btcSwap from 'swaps/btcSwap'


const secret      = 'c0809ce9f484fdcdfb2d5aabd609768ce0374ee97a1a5618ce4cd3f16c00a078'
const secretHash  = 'c0933f9be51a284acb6b1a6617a48d795bdeaa80'
const lockTime    = 1521171580

const btcOwner = {
  privateKey: 'cRkKzpir8GneA48iQVjSpUGT5mopFRTGDES7Kb43JduzrbhuVncn',
  publicKey: '02b65eed68f383178ee4bf301d1a2d231194eba2a65969187d49a6cdd945ea4f9d',
}
const ethOwner = {
  privateKey: 'cVXioJB7swr6KcZpb67uYxCHdAj1J7PfTcKgreq5oKSM5Hf9m73Y',
  publicKey: '03c86cbef400284e700ec1011791c34d7eac8f69a4bd4698b83b52fb0cc2773b0a',
}

let script


test('check secretHash generated by ripemd160', (t) => {
  const result = crypto.ripemd160(secret)
  const expected = secretHash

  t.is(result, expected)
})

test('create script', (t) => {
  const result = btcSwap.createScript({
    btcOwnerSecretHash: secretHash,
    btcOwnerPublicKey: btcOwner.publicKey,
    ethOwnerPublicKey: ethOwner.publicKey,
    lockTime,
  })

  const expected = {
    address: '2NEME2To2xtQaMUs6j1osJtubf6Cchohr14',
    lockTime: 1521171580,
  }

  t.is(result.address, expected.address)
  t.is(result.lockTime, expected.lockTime)

  script = result.script
})

test('fund script', (t) => {
  const result = btcSwap.fundScript({ script, lockTime, amount: 0.01 })

  log(result)
})
